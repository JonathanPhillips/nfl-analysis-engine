"""Initial migration

Revision ID: 5be5a9523f92
Revises: 
Create Date: 2025-08-05 16:34:09.292116

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5be5a9523f92'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('teams',
    sa.Column('team_abbr', sa.String(length=3), nullable=False),
    sa.Column('team_name', sa.String(length=50), nullable=False),
    sa.Column('team_nick', sa.String(length=50), nullable=False),
    sa.Column('team_conf', sa.String(length=3), nullable=False),
    sa.Column('team_division', sa.String(length=10), nullable=False),
    sa.Column('team_color', sa.String(length=7), nullable=True),
    sa.Column('team_color2', sa.String(length=7), nullable=True),
    sa.Column('team_color3', sa.String(length=7), nullable=True),
    sa.Column('team_color4', sa.String(length=7), nullable=True),
    sa.Column('team_logo_espn', sa.String(length=255), nullable=True),
    sa.Column('team_logo_wikipedia', sa.String(length=255), nullable=True),
    sa.Column('team_city', sa.String(length=50), nullable=True),
    sa.Column('team_wordmark', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teams_id'), 'teams', ['id'], unique=False)
    op.create_index(op.f('ix_teams_team_abbr'), 'teams', ['team_abbr'], unique=True)
    op.create_table('games',
    sa.Column('game_id', sa.String(length=20), nullable=False),
    sa.Column('old_game_id', sa.String(length=20), nullable=True),
    sa.Column('season', sa.Integer(), nullable=False),
    sa.Column('season_type', sa.String(length=10), nullable=False),
    sa.Column('week', sa.Integer(), nullable=True),
    sa.Column('game_date', sa.Date(), nullable=False),
    sa.Column('kickoff_time', sa.Time(), nullable=True),
    sa.Column('home_team', sa.String(length=3), nullable=False),
    sa.Column('away_team', sa.String(length=3), nullable=False),
    sa.Column('home_score', sa.Integer(), nullable=True),
    sa.Column('away_score', sa.Integer(), nullable=True),
    sa.Column('result', sa.Integer(), nullable=True),
    sa.Column('total_score', sa.Integer(), nullable=True),
    sa.Column('roof', sa.String(length=20), nullable=True),
    sa.Column('surface', sa.String(length=20), nullable=True),
    sa.Column('temp', sa.Integer(), nullable=True),
    sa.Column('wind', sa.Integer(), nullable=True),
    sa.Column('home_spread', sa.Float(), nullable=True),
    sa.Column('total_line', sa.Float(), nullable=True),
    sa.Column('home_moneyline', sa.Integer(), nullable=True),
    sa.Column('away_moneyline', sa.Integer(), nullable=True),
    sa.Column('game_finished', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['away_team'], ['teams.team_abbr'], ),
    sa.ForeignKeyConstraint(['home_team'], ['teams.team_abbr'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_games_away_team'), 'games', ['away_team'], unique=False)
    op.create_index(op.f('ix_games_game_date'), 'games', ['game_date'], unique=False)
    op.create_index(op.f('ix_games_game_id'), 'games', ['game_id'], unique=True)
    op.create_index(op.f('ix_games_home_team'), 'games', ['home_team'], unique=False)
    op.create_index(op.f('ix_games_id'), 'games', ['id'], unique=False)
    op.create_index(op.f('ix_games_old_game_id'), 'games', ['old_game_id'], unique=False)
    op.create_index(op.f('ix_games_season'), 'games', ['season'], unique=False)
    op.create_index(op.f('ix_games_season_type'), 'games', ['season_type'], unique=False)
    op.create_index(op.f('ix_games_week'), 'games', ['week'], unique=False)
    op.create_table('players',
    sa.Column('player_id', sa.String(length=20), nullable=False),
    sa.Column('gsis_id', sa.String(length=20), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('position', sa.String(length=10), nullable=True),
    sa.Column('position_group', sa.String(length=20), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('team_abbr', sa.String(length=3), nullable=True),
    sa.Column('jersey_number', sa.Integer(), nullable=True),
    sa.Column('rookie_year', sa.Integer(), nullable=True),
    sa.Column('years_exp', sa.Integer(), nullable=True),
    sa.Column('college', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['team_abbr'], ['teams.team_abbr'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_players_full_name'), 'players', ['full_name'], unique=False)
    op.create_index(op.f('ix_players_gsis_id'), 'players', ['gsis_id'], unique=False)
    op.create_index(op.f('ix_players_id'), 'players', ['id'], unique=False)
    op.create_index(op.f('ix_players_player_id'), 'players', ['player_id'], unique=True)
    op.create_index(op.f('ix_players_position'), 'players', ['position'], unique=False)
    op.create_index(op.f('ix_players_team_abbr'), 'players', ['team_abbr'], unique=False)
    op.create_table('plays',
    sa.Column('play_id', sa.String(length=30), nullable=False),
    sa.Column('game_id', sa.String(length=20), nullable=False),
    sa.Column('season', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=True),
    sa.Column('posteam', sa.String(length=3), nullable=True),
    sa.Column('defteam', sa.String(length=3), nullable=True),
    sa.Column('qtr', sa.Integer(), nullable=True),
    sa.Column('game_seconds_remaining', sa.Integer(), nullable=True),
    sa.Column('half_seconds_remaining', sa.Integer(), nullable=True),
    sa.Column('game_half', sa.String(length=10), nullable=True),
    sa.Column('yardline_100', sa.Integer(), nullable=True),
    sa.Column('ydstogo', sa.Integer(), nullable=True),
    sa.Column('down', sa.Integer(), nullable=True),
    sa.Column('play_type', sa.String(length=20), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('yards_gained', sa.Integer(), nullable=True),
    sa.Column('posteam_score', sa.Integer(), nullable=True),
    sa.Column('defteam_score', sa.Integer(), nullable=True),
    sa.Column('score_differential', sa.Integer(), nullable=True),
    sa.Column('ep', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('epa', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('wp', sa.Numeric(precision=8, scale=6), nullable=True),
    sa.Column('wpa', sa.Numeric(precision=8, scale=6), nullable=True),
    sa.Column('cpoe', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('pass_location', sa.String(length=20), nullable=True),
    sa.Column('air_yards', sa.Integer(), nullable=True),
    sa.Column('yards_after_catch', sa.Integer(), nullable=True),
    sa.Column('passer_player_id', sa.String(length=20), nullable=True),
    sa.Column('receiver_player_id', sa.String(length=20), nullable=True),
    sa.Column('rusher_player_id', sa.String(length=20), nullable=True),
    sa.Column('touchdown', sa.Boolean(), nullable=True),
    sa.Column('pass_touchdown', sa.Boolean(), nullable=True),
    sa.Column('rush_touchdown', sa.Boolean(), nullable=True),
    sa.Column('interception', sa.Boolean(), nullable=True),
    sa.Column('fumble', sa.Boolean(), nullable=True),
    sa.Column('safety', sa.Boolean(), nullable=True),
    sa.Column('penalty', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['defteam'], ['teams.team_abbr'], ),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ),
    sa.ForeignKeyConstraint(['passer_player_id'], ['players.player_id'], ),
    sa.ForeignKeyConstraint(['posteam'], ['teams.team_abbr'], ),
    sa.ForeignKeyConstraint(['receiver_player_id'], ['players.player_id'], ),
    sa.ForeignKeyConstraint(['rusher_player_id'], ['players.player_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plays_defteam'), 'plays', ['defteam'], unique=False)
    op.create_index(op.f('ix_plays_game_id'), 'plays', ['game_id'], unique=False)
    op.create_index(op.f('ix_plays_id'), 'plays', ['id'], unique=False)
    op.create_index(op.f('ix_plays_play_id'), 'plays', ['play_id'], unique=True)
    op.create_index(op.f('ix_plays_play_type'), 'plays', ['play_type'], unique=False)
    op.create_index(op.f('ix_plays_posteam'), 'plays', ['posteam'], unique=False)
    op.create_index(op.f('ix_plays_season'), 'plays', ['season'], unique=False)
    op.create_index(op.f('ix_plays_week'), 'plays', ['week'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_plays_week'), table_name='plays')
    op.drop_index(op.f('ix_plays_season'), table_name='plays')
    op.drop_index(op.f('ix_plays_posteam'), table_name='plays')
    op.drop_index(op.f('ix_plays_play_type'), table_name='plays')
    op.drop_index(op.f('ix_plays_play_id'), table_name='plays')
    op.drop_index(op.f('ix_plays_id'), table_name='plays')
    op.drop_index(op.f('ix_plays_game_id'), table_name='plays')
    op.drop_index(op.f('ix_plays_defteam'), table_name='plays')
    op.drop_table('plays')
    op.drop_index(op.f('ix_players_team_abbr'), table_name='players')
    op.drop_index(op.f('ix_players_position'), table_name='players')
    op.drop_index(op.f('ix_players_player_id'), table_name='players')
    op.drop_index(op.f('ix_players_id'), table_name='players')
    op.drop_index(op.f('ix_players_gsis_id'), table_name='players')
    op.drop_index(op.f('ix_players_full_name'), table_name='players')
    op.drop_table('players')
    op.drop_index(op.f('ix_games_week'), table_name='games')
    op.drop_index(op.f('ix_games_season_type'), table_name='games')
    op.drop_index(op.f('ix_games_season'), table_name='games')
    op.drop_index(op.f('ix_games_old_game_id'), table_name='games')
    op.drop_index(op.f('ix_games_id'), table_name='games')
    op.drop_index(op.f('ix_games_home_team'), table_name='games')
    op.drop_index(op.f('ix_games_game_id'), table_name='games')
    op.drop_index(op.f('ix_games_game_date'), table_name='games')
    op.drop_index(op.f('ix_games_away_team'), table_name='games')
    op.drop_table('games')
    op.drop_index(op.f('ix_teams_team_abbr'), table_name='teams')
    op.drop_index(op.f('ix_teams_id'), table_name='teams')
    op.drop_table('teams')
    # ### end Alembic commands ###
